class CfgFunctions
{
	class TFAR
	{
		class Radio
		{
<<<<<<< HEAD
			file="task_force_radio\functions";
			class TaskForceArrowheadRadioInit{postInit = 1;};
			class ServerInit;
			class ClientInit;
			// A
			class activeLrRadio;
			class activeSwRadio;
			class addEventHandler;
			// B
			class backpackLr;
			// C
			class calcTerrainInterception;
			class canSpeak;
			class canUseSWRadio;
			class canUseLRRadio;
			class canUseDDRadio;
			class copyRadioSettingMenu;
			class CopySettings;
			class currentDirection;
			class currentLRFrequency;
			class currentSWFrequency;
			class currentUnit;
			// D
			class defaultPositionCoordinates;
			// E
			class eyeDepth;
			// F
			class fireEventHandlers;
			class forceSpectator;
			// G
			class generateDDFreq;
			class generateLrSettings;
			class generateSwSettings;
			class generateFrequencies;
			class getVehicleSide;
			class getSwRadioCode;
			class getLrRadioCode;
			class getSwChannel;
			class getLrChannel;
			class getSwStereo;
			class getSwFrequency;
			class getLrFrequency;
			class getLrStereo;
			class getSwVolume;
			class getLrVolume;
			class getSwSettings;
			class getLrSettings;
			class getNearPlayers;
			class getTeamSpeakServerName;
			class getTeamSpeakChannelName;
			class getConfigProperty;
			class getLrRadioProperty;
			class GetChannelFrequency;
			class getSideRadio;
			class getTransmittingDistanceMultiplicator;
			class getAdditionalLrStereo;
			class getAdditionalSwStereo;
			class getAdditionalLrChannel;
			class getAdditionalSwChannel;
			class getCurrentSwStereo;
			class getCurrentLrStereo;
			class getDefaultRadioClasses;
			class getRadioOwner;
			class getSwSpeakers;
			class getLrSpeakers;
			// H
			class hasVehicleRadio;
			class haveProgrammator;
			class hideHint;
			class haveDDRadio;
			class haveLRRadio;
			class haveSWRadio;
			// I
			class initialiseBaseModule;
			class initialiseFreqModule;
			class initialiseEnforceUsageModule;
			class inWaterHint;
			class isAbleToUseRadio;
			class isForcedCurator;
			class isPrototypeRadio;
			class isRadio;
			class isSameRadio;
			class isSpeaking;
			class isTeamSpeakPluginEnabled;
			class isTurnedOut;
			class isVehicleIsolated;
			// L
			class lrRadioSubMenu;
			class lrRadioMenu;
			class lrRadiosList;
			// O
			class objectInterception;
			class onAdditionalSwTangentReleased;
			class onAdditionalSwTangentPressed;
			class onAdditionalLRTangentReleased;
			class onAdditionalLRTangentPressed;
			class onDDTangentPressed;
			class onDDTangentReleased;
			class onDDTangentReleasedHack;
			class onLRTangentPressed;
			class onLRTangentReleased;
			class onLRTangentReleasedHack;
			class onSwTangentPressed;
			class onSwTangentReleased;
			class onSwTangentPressedHack;
			class onSwTangentReleasedHack;
			class onSpeakVolumeChange;
			class onSwDialogOpen;
			class onLRDialogOpen;
			class onDDDialogOpen;
			class onGroundHint;
			// P
			class preparePositionCoordinates;
			class processSWChannelKeys;
			class processSWCycleKeys;
			class processSWStereoKeys;
			class processLRChannelKeys;
			class processLRCycleKeys;
			class processLRStereoKeys;
			class processPlayerPositions;
			class processSpeakerRadios;
			class processCuratorKey;
			class ProcessTangent;
			class processGroupFrequencySettings;
			class processRespawn;
			// R
			class removeEventHandler;
			class radioReplaceProcess;
			class requestRadios;
			class radioToRequestCount;
			class radiosList;
			class radiosListSorted;
			// S
			class setSwSettings;
			class setLrSettings;
			class setSwStereo;
			class setLrChannel;
			class setSwChannel;
			class setSwVolume;
			class setLrVolume;
			class setSwFrequency;
			class setLrFrequency;
			class setLrStereo;
			class sendPlayerInfo;
			class sendPlayerKilled;
			class setSwSpeakers;
			class setAdditionalLrStereo;
			class setAdditionalSwStereo;
			class setAdditionalLrChannel;
			class setAdditionalSwChannel;
			class showHint;
			class ShowRadioInfo;
			class setSwRadioCode;
			class setLrRadioCode;
			class setVoiceVolume;
			class setActiveSwRadio;
			class setActiveLrRadio;
			class setLongRangeRadioFrequency;
			class setPersonalRadioFrequency;
			class sendVersionInfo;
			class swRadioSubMenu;
			class swRadioMenu;
			class sendFrequencyInfo;
			class showRadioVolume;
			class SetChannelFrequency;
			class setRadioOwner;
			class setLrSpeakers;
			class showRadioSpeakers;
			class sessionTracker;
			class setVolumeViaDialog;
			class setChannelViaDialog;
			// U
			class updateDDDialog;
			class updateSWDialogToChannel;
			class updateLRDialogToChannel;
			class updateProgrammatorDialog;
			class unableToUseHint;
			// V
			class vehicleId;
			class vehicleIsIsolatedAndInside;
			class vehicleLr;
=======
			file="task_force_radio\functions";		
			class TaskForceArrowheadRadioInit
			{
				postInit = 1;
			};
			class ServerInit{};
			class ClientInit{};
			class isVehicleIsolated{};
			class hasVehicleRadio{};
			class getVehicleSide{};
			class getSwRadioCode{};
			class getLrRadioCode{};
			class setSwSettings{};
			class setLrSettings{};
			class getSwChannel{};
			class getLrChannel{};
			class setSwStereo{};
			class setLrChannel{};
			class setSwChannel{};
			class getSwStereo{};
			class getSwFrequency{};
			class getLrFrequency{};
			class getLrStereo{};
			class setSwVolume{};
			class setLrVolume{};
			class getSwVolume{};
			class getLrVolume{};
			class setSwFrequency{};
			class setLrFrequency{};
			class setLrStereo{};
			class getSwSettings{};
			class getLrSettings{};
			class calcTerrainInterception{};
			class haveSWRadio{};
			class processSWChannelKeys{};
			class processSWCycleKeys{};			
			class processSWStereoKeys{};			
			class processLRChannelKeys{};
			class processLRCycleKeys{};			
			class processLRStereoKeys{};			
			class vehicleIsIsolatedAndInside{};
			class canSpeak{};
			class canUseSWRadio{};
			class onSwTangentPressed{};
			class onSwTangentReleased{};
			class canUseLRRadio{};
			class onLRTangentPressed{};
			class onLRTangentReleased{};
			class onLRTangentReleasedHack{};
			class onDDTangentPressed{};
			class onDDTangentReleased{};
			class onDDTangentReleasedHack{};
			class processPlayerPositions{};
			class sendPlayerInfo{};
			class sendPlayerKilled{};
			class onSpeakVolumeChange{};
			class getNearPlayers{};
			class vehicleId{};
			class preparePositionCoordinates{};
			class sendFrequencyInfo{};
			class processRespawn{};
			class radioReplaceProcess{};
			class requestRadios{};
			class radioToRequestCount{};
			class isRadio{};
			class swRadioSubMenu{};
			class swRadioMenu{};
			class lrRadioSubMenu{};
			class lrRadioMenu{};
			class radiosList{};
			class radiosListSorted{};
			class vehicleLr{};
			class lrRadiosList{};			
			class backpackLr{};
			class sendVersionInfo{};
			class activeLrRadio{};
			class haveLRRadio{};
			class canUseDDRadio{};
			class onSwDialogOpen{};
			class onLRDialogOpen{};
			class onDDDialogOpen{};
			class activeSwRadio{};
			class haveDDRadio{};
			class updateDDDialog{};
			class updateSWDialogToChannel{};
			class updateLRDialogToChannel{};
			class setActiveSwRadio{};
			class setActiveLrRadio{};
			class generateLrSettings{};
			class generateSwSettings{};
			class generateFrequencies{};
			class currentSWFrequency{};
			class currentLRFrequency{};
			class setLongRangeRadioFrequency{};
			class setPersonalRadioFrequency{};
			class eyeDepth{};
			class inWaterHint{};
			class onGroundHint{};
			class getTeamSpeakServerName{};
			class getTeamSpeakChannelName{};
			class isTeamSpeakPluginEnabled{};
			class getConfigProperty{};
			class getLrRadioProperty{};
			class isPrototypeRadio{};
			class showHint{};
			class hideHint{};
			class initialiseBaseModule{};
			class initialiseFreqModule{};
			class initialiseEnforceUsageModule{};
			class ShowRadioInfo{};
			class setSwRadioCode{};
			class setLrRadioCode{};
			class setVoiceVolume{};
			class objectInterception{};
			class showRadioVolume{};
			class GetChannelFrequency{};
			class SetChannelFrequency{};
			class CopySettings{};
			class getSideRadio{};
			class unableToUseHint{};
			class isAbleToUseRadio{};
			class forceSpectator{};
			class getTransmittingDistanceMultiplicator{};
			class processGroupFrequencySettings{};
			class copyRadioSettingMenu{};
			class getAdditionalLrStereo{};
			class getAdditionalSwStereo{};
			class setAdditionalLrStereo{};
			class setAdditionalSwStereo{};
			class getAdditionalLrChannel{};
			class getAdditionalSwChannel{};
			class setAdditionalLrChannel{};
			class setAdditionalSwChannel{};
			class getCurrentSwStereo{};
			class getCurrentLrStereo{};
			class onAdditionalSwTangentReleased{};
			class onAdditionalSwTangentPressed{};
			class onAdditionalLRTangentReleased{};
			class onAdditionalLRTangentPressed{};
			class ProcessTangent{};
			class getDefaultRadioClasses{};			
>>>>>>> 0a485c21ade41821aa82f1e93070454dd2f7f086
		};
	};
};
